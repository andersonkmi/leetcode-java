/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:32.0.1-android'

    // Use JUnit Jupiter for testing - using consistent versions
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'

    // Add JUnit Platform Launcher explicitly (often needed for IDEs and Gradle)
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.1'

    // AssertJ for fluent assertions
    testImplementation 'org.assertj:assertj-core:3.26.0'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    // Optional: Add test logging for better visibility
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}